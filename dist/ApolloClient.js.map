{"version":3,"sources":["../ApolloClient.js"],"names":["client","link","uri","fetch","cache"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;AAEO,IAAMA,0BAAS,+BAAiB;AACrCC,QAAM,6BAAa,EAAEC,8BAAF,EAAwBC,0BAAxB,EAAb,CAD+B;AAErCC,SAAO;AAF8B,CAAjB,CAAf","file":"ApolloClient.js","sourcesContent":["import { ApolloClient } from 'apollo-client'\nimport { HttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport fetch from 'node-fetch'\nimport { remoteSchemaUrl } from './settings'\n/*使用ApolloClient来实现microservices之间的互相调用，client对象存储在context里，\n在resolver中可以通过context.client.query|mutate来调用其他微服务（如UploadService）*/\nexport const client = new ApolloClient({\n  link: new HttpLink({ uri: remoteSchemaUrl, fetch: fetch }),\n  cache: new InMemoryCache()\n})"]}