{"version":3,"sources":["../file.js"],"names":["fileSchema","Schema","filename","type","String","required","mimetype","stream","encoding","tag","File","model","e","name"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,aAAa,mBAASC,MAAT,CAAgB;AACjCC,YAAU,EAAEC,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EADuB;AAEjCC,YAAU,EAAEH,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAFuB;AAGjCE,UAAQ,EAAEJ,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAHyB;AAIjCG,YAAU,EAAEL,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,EAJuB;AAKjCI,OAAK,EAAEN,MAAMC,MAAR,EAAgBC,UAAU,IAA1B,CAAiC;AAAjC,GAL4B,EAAhB,CAAnB;AAOA,IAAIK,OAAO,IAAX;AACA,IAAI;AACFA,SAAO,mBAASC,KAAT,CAAe,MAAf,EAAuBX,UAAvB,CAAP;AACD,CAFD,CAEE,OAAOY,CAAP,EAAU;AACV,MAAIA,EAAEC,IAAF,KAAW,qBAAf,EAAsC;AACpCH,WAAO,mBAASC,KAAT,CAAe,MAAf,CAAP;AACD;AACF;kBACcD,I","file":"file.js","sourcesContent":["import mongoose from 'mongoose'\n\nconst fileSchema = mongoose.Schema({\n  filename: { type: String, required: true },\n  mimetype: { type: String, required: true },\n  stream: { type: String, required: true },\n  encoding: { type: String, required: true },\n  tag: { type: String, required: true } // 图片所属的应用范围，如图书封面为Book，用户头像为User\n})\nlet File = null\ntry {\n  File = mongoose.model('File', fileSchema)\n} catch (e) {\n  if (e.name === 'OverwriteModelError') {\n    File = mongoose.model('File')\n  }\n}\nexport default File\n"]}